{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/Convertation.tsx","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","data","addMovie","useState","setQuery","isMovieLoading","setIsMovieLoading","error","setError","result","setResult","errorValue","setErrorValue","sendQuery","event","a","preventDefault","response","finally","isDisabled","Boolean","trim","convertedResult","Title","Plot","Poster","imdbID","useEffect","onSubmit","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","App","setMovies","newMovie","prevMovies","some","item","ReactDOM","render","document","getElementById"],"mappings":"+TAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,YAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACE,UAAQ,cACRC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,aAAlC,SAAgDD,EAAMK,aAI1D,sBAAKJ,UAAU,UAAU,UAAQ,mBAAjC,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAS,UAAQ,WAAhC,4BC3BKC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,c,+CCTZ,SAASC,EAASC,GACvB,OAAOC,MAAM,GAAD,OAHE,2CAGF,cAAiBD,IAC1BE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,uBCPN,ICWMC,EAA6B,SAAC,GAAkB,IDXxBC,ECWQC,EAAe,EAAfA,SAC3C,EAA0BC,mBAAS,IAAnC,mBAAOX,EAAP,KAAcY,EAAd,KACA,EAA4CD,oBAAS,GAArD,mBAAOE,EAAP,KAAuBC,EAAvB,KACA,EAA0BH,oBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KACA,EAA4BL,mBAA2B,MAAvD,mBAAOM,EAAP,KAAeC,EAAf,KACA,EAAoCP,mBAAS,IAA7C,mBAAOQ,EAAP,KAAmBC,EAAnB,KAEMC,EAAS,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDAChBD,EAAME,iBAENV,GAAkB,GAElBf,EAASC,GAAOE,MAAK,SAACuB,GAChB,UAAWA,EACbP,EAAUO,IAEVT,GAAS,GACTI,EAAcK,EAASlB,WAGxBmB,SAAQ,kBAAMZ,GAAkB,MAbnB,2CAAH,sDAqBTa,EAAaC,QAAQ5B,EAAM6B,QAE3BC,EAAkBb,EDxCjB,CACL1B,OAFiCkB,ECyCmBQ,GDvCxCc,MACZvC,YAAaiB,EAAKuB,KAClB3C,OAAwB,QAAhBoB,EAAKwB,OACT,4DACAxB,EAAKwB,OACTvC,QAAQ,8BAAD,OAAgCe,EAAKyB,QAC5CpC,OAAQW,EAAKyB,QCiCiD,KAchE,OAJAC,qBAAU,WACRnB,GAAS,KACR,CAAChB,IAGF,qCACE,uBAAMb,UAAU,aAAaiD,SAAUf,EAAvC,UACE,sBAAKlC,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQkD,QAAQ,cAAjC,yBAIA,qBAAKlD,UAAU,UAAf,SACE,uBACE,UAAQ,aACRmD,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZrD,UAAWsD,IAAW,QACpB,CAAE,YAAa1B,IACjB2B,MAAO1C,EACP2C,SAAU,SAACrB,GAAD,OAAWV,EAASU,EAAMsB,OAAOF,YAI9C3B,GACC,mBAAG5B,UAAU,iBAAiB,UAAQ,eAAtC,SACGgC,OAKP,sBAAKhC,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE,UAAQ,eACRmD,KAAK,SACLnD,UAAWsD,IAAW,kBACpB,CAAE,aAAc5B,IAClBgC,UAAWlB,EALb,SAOIV,EAA0B,eAAjB,mBAIdA,GACC,qBAAK9B,UAAU,UAAf,SACE,wBACE,UAAQ,YACRmD,KAAK,SACLnD,UAAU,oBACV2D,QA1DS,WACjB7B,IACFP,EAASoB,GAXXlB,EAAS,IACTM,EAAU,QA8DA,qCAaPD,GACC,sBAAK9B,UAAU,YAAY,UAAQ,mBAAnC,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAO4C,WC/GfiB,EAAM,WACjB,MAA4BpC,mBAAkB,IAA9C,mBAAOf,EAAP,KAAeoD,EAAf,KAgBA,OACE,sBAAK7D,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQA,MAGtB,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CAAWuB,SArBC,SAACuC,GACjBD,GAAU,SAAAE,GAKR,OAJgBA,EAAWC,MAAK,SAAAC,GAAI,OAClCA,EAAKtD,SAAWmD,EAASnD,UAOpBoD,EAHC,GAAN,mBAAWA,GAAX,CAAuBD,gBCZ/BI,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8d3fff32.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=f7089824';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { Movie } from '../types/Movie';\nimport { MovieData } from '../types/MovieData';\n\nexport const convertDataIntoMovie = (data: MovieData): Movie => {\n  return {\n    title: data.Title,\n    description: data.Plot,\n    imgUrl: data.Poster === 'N/A'\n      ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n      : data.Poster,\n    imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n    imdbId: data.imdbID,\n  };\n};\n","import React, { useEffect, useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { getMovie } from '../../api';\nimport { ResponseError } from '../../types/ReponseError';\nimport { convertDataIntoMovie } from '../Convertation';\nimport { MovieCard } from '../MovieCard/MovieCard';\n\ninterface Props {\n  addMovie: (movie: Movie) => void;\n}\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [isMovieLoading, setIsMovieLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [result, setResult] = useState<MovieData | null>(null);\n  const [errorValue, setErrorValue] = useState('');\n\n  const sendQuery = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setIsMovieLoading(true);\n\n    getMovie(query).then((response: MovieData | ResponseError) => {\n      if ('Title' in response) {\n        setResult(response);\n      } else {\n        setError(true);\n        setErrorValue(response.Error);\n      }\n    })\n      .finally(() => setIsMovieLoading(false));\n  };\n\n  const reset = () => {\n    setQuery('');\n    setResult(null);\n  };\n\n  const isDisabled = Boolean(query.trim());\n\n  const convertedResult = result ? convertDataIntoMovie(result) : null!;\n\n\n  const addToMovieList = () => {\n    if (result) {\n      addMovie(convertedResult);\n      reset();\n    }\n  };\n\n  useEffect(() => {\n    setError(false);\n  }, [query]);\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={sendQuery}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input',\n                { 'is-danger': error })}\n              value={query}\n              onChange={(event) => setQuery(event.target.value)}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              {errorValue}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light',\n                { 'is-loading': isMovieLoading })}\n              disabled={!isDisabled}\n            >\n              {!result ? 'Find a movie' : 'Search again'}\n            </button>\n          </div>\n\n          {result && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addToMovieList}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {result && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={convertedResult} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAdd = (newMovie: Movie) => {\n    setMovies(prevMovies => {\n      const isAdded = prevMovies.some(item => (\n        item.imdbId === newMovie.imdbId\n      ));\n\n      if (!isAdded) {\n        return [...prevMovies, newMovie];\n      }\n\n      return prevMovies;\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={handleAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}